@using Authentication.Models;

@model HomeModel
@{
    ViewBag.Title = "LNF Online Services Log In";
    string errmsg = ViewBag.ErrorMessage;
    bool passwordResetRequired = ViewBag.PasswordResetRequired;
    string passwordResetError = ViewBag.PasswordResetError;
    bool requestPasswordReset = ViewBag.RequestPasswordReset;
    bool? httpsCheck = ViewBag.IsHttps;
    bool isHttps = httpsCheck.GetValueOrDefault(Request.IsSecureConnection);
    bool isprod = Model.Provider.IsProduction();
}

@section styles{
    <link rel="stylesheet" href="@Url.Content("~/Content/login.css?v=20201009")">

    <style>
        body {
            overflow: hidden;
        }

        .set-password a:link,
        .set-password a:visited,
        .set-password a:active,
        .set-password a:hover {
            color: gold;
        }

        .debug {
            width: 700px;
            height: 304px;
            border: 2px solid #808080;
            position: fixed;
            top: 50%;
            left: 50%;
            margin-left: -350px;
            margin-top: -152px;
            background-color: #f5f5f5;
        }

            .debug .messages {
                white-space: pre;
                overflow: auto;
                height: 260px;
                padding: 10px;
                font-family: monospace;
                margin-bottom: 5px;
            }
    </style>
}

<div class="login-container">
    <div class="login">
        <div class="login-logo"></div>
        <div class="login-title login-text">Online Services</div>
        <div class="kiosk-message">
            @ViewBag.KioskMessage
        </div>

        @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @class = "form-horizontal login-form" }))
        {
            @Html.HiddenFor(x => x.ReturnServer)
            @Html.HiddenFor(x => x.ReturnUrl)
            @Html.HiddenFor(x => x.CurrentIP, new { @class = "ip-addr" });

            <div class="form-group">
                <label class="control-label col-md-offset-3 col-md-2 login-text">Username</label>
                <div class="col-md-3">
                    @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", autocorrect = "off", autocapitalize = "none", spellcheck = "false" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-offset-3 col-md-2 login-text">Password</label>
                <div class="col-md-3">
                    @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-5 col-md-3 set-password">
                    @Html.ActionLink("Set new or reset password", "RequestPasswordReset", null, new { @class = "kiosk-message" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-5 col-md-3">
                    <button type="submit" class="login-button btn btn-primary"></button>
                </div>
            </div>
        }

        <div class="login-alerts">
            @if (!string.IsNullOrEmpty(errmsg))
            {
                <div class="alert alert-danger" role="alert">
                    @errmsg
                </div>
            }

            @if (!isprod)
            {
                <div class="alert alert-danger" role="alert">
                    <strong style="font-size: larger;">THIS IS THE DEVELOPMENT SITE!</strong><br /><br />
                    ANY RESERVATIONS MADE ON THE DEVELOPEMENT SITE ARE NOT VALID.<br /><br />
                    IF YOU CAME HERE BY ACCIDENT PLEASE GO <a href="https://ssel-apps.eecs.umich.edu/login">HERE</a> TO LOG IN.
                </div>
            }
        </div>

        <div class="https-message">
            @if (isHttps)
            {
                <img src="~/Content/images/lock-dark.png" style="width: 12px;" />
            }
            else
            {
                <img src="~/Content/images/unlock-dark.png" style="width: 12px;" />
            }
        </div>
    </div>
</div>

@if (requestPasswordReset)
{
    <div class="modal fade" tabindex="-1" role="dialog" id="password-reset-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Request Password Reset</h4>
                </div>
                @using (Html.BeginForm("RequestPasswordReset", "Home"))
                {
                    <div class="modal-body">
                        <div style="margin-bottom: 10px;">Please enter your username below. A password reset code will be sent to your email address on file.</div>
                        <div style="margin-bottom: 10px;">If you are not sure which email this is please contact <a href="mailto:lnf-support@umich.edu">lnf-support@umich.edu</a>.</div>
                        <div class="form-group">
                            <label for="username">Username</label>
                            <input type="text" class="form-control" name="username" id="username" />
                        </div>
                        @if (!string.IsNullOrEmpty(passwordResetError))
                        {
                            <div class="alert alert-danger" role="alert">
                                @passwordResetError
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
                        <button type="submit" class="btn btn-primary">Request Reset</button>
                    </div>
                }
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
}

@if (passwordResetRequired)
{
    <div class="modal fade" tabindex="-1" role="dialog" id="password-reset-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Password Reset Required</h4>
                </div>
                @using (Html.BeginForm("ResetPassword", "Home"))
                {
                <div class="modal-body">
                    <div style="margin-bottom: 10px;">A password reset code has been sent to your email address on file. Please check your email and enter the code below. The code will expire in 15 minutes. Please verify that your browser does not prepopulate the fields with previously saved username/password. After your password has been changed you will return to the login page and must enter your username and new password to login.</div>
                    <div style="margin-bottom: 10px;">If you are not sure which email this is please contact <a href="mailto:lnf-support@umich.edu">lnf-support@umich.edu</a>.</div>
                    <div>
                        Password requirements:
                        <ul>
                            <li>At least 6 characters</li>
                            <li>Cannot be your previous password</li>
                            <li>Cannot be your username</li>
                            <li>Do not use your Umich Kerberos password</li>
                        </ul>
                    </div>
                    <hr />
                    <div class="form-group">
                        <label for="ResetCode">Username</label>
                        <input type="text" class="form-control" name="UserName" id="UserName" value="@Model.UserName" readonly="readonly" autocomplete="off" />
                    </div>
                    <div class="form-group">
                        <label for="ResetCode">Reset Code</label>
                        <input type="text" class="form-control" name="ResetCode" id="ResetCode" placeholder="Code sent by email (case sensitive)" autocomplete="off" />
                    </div>
                    <div class="form-group">
                        <label for="NewPassword">New Password</label>
                        <input type="password" class="form-control" name="NewPassword" id="NewPassword" placeholder="6 character minimum" autocomplete="off" />
                    </div>
                    <div class="form-group">
                        <label for="ConfirmPassword">Confirm Password</label>
                        <input type="password" class="form-control" name="ConfirmPassword" id="ConfirmPassword" placeholder="6 character minimum" autocomplete="off" />
                    </div>
                    @if (!string.IsNullOrEmpty(passwordResetError))
                    {
                        <div class="alert alert-danger" role="alert">
                            @passwordResetError
                        </div>
                    }
                </div>
                    <div class="modal-footer">
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
                        <button type="submit" class="btn btn-primary">Reset Password</button>
                    </div>
                }
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
}

<div class="debug" style="display: none;">
    <div class="messages"></div>
    <button type="button" class="debug-close-button" style="margin-left: 5px;">Close</button>
</div>

@section scripts {
    <script>
        if (window.location != window.top.location)
            window.top.location = '/login';

        if (Modernizr.flexbox)
            $(".debug .messages").append("<div>flexbox</div>");
        else
            $(".debug .messages").append("<div>no-flexbox</div>");

        if (Modernizr.flexboxlegacy)
            $(".debug .messages").append("<div>flexboxlegacy</div>");
        else
            $(".debug .messages").append("<div>no-flexboxlegacy</div>");

        $(".debug .messages").append($("<div/>").html(window.navigator.userAgent));

        $(".debug .messages").append($("<div/>").html(window.location.href));
        $(".debug .messages").append($("<div/>").html($(".ip-addr").val()));

        $(window).on("keydown", function (e) {
            if (e.shiftKey == true && e.keyCode == 38)
                $(".debug").show();
        });

        $(".debug-close-button").on("click", function (e) {
            $(".debug").hide();
        });

        $('#password-reset-modal').modal('show').on('hidden.bs.modal', function (e) {
            window.location = '@Url.Action("Index")';
        });
    </script>
}